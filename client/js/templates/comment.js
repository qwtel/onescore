// Generated by CoffeeScript 1.3.3
(function() {

  _.extend(Template.comment, {
    events: {
      'click .reply': function(e) {
        Session.toggle('add-comment', this._id);
        Session.set('edit-comment', null);
        Session.set('thread', window.getThreadId(this));
        Meteor.flush();
        return window.focusById("reply-" + this._id);
      },
      'click .vote': function(e) {
        var $t, up;
        if (!e.isPropagationStopped()) {
          $t = $(e.target);
          if (!$t.hasClass('vote')) {
            $t = $t.parents('.vote');
          }
          up = $t.data('up');
          Meteor.call('vote', 'comments', this._id, up);
          return e.stopPropagation();
        }
      },
      'click .edit': function(e) {
        Session.set('add-comment', null);
        Session.toggle('edit-comment', this._id);
        Session.set('thread', window.getThreadId(this));
        Meteor.flush();
        return window.focusById("reply-" + this._id);
      },
      'click .remove': function(e) {
        return Comments.remove(this._id);
      }
    },
    user: function() {
      return Meteor.users.findOne(this.user);
    },
    mention: function() {
      if (this.mention) {
        return Meteor.users.findOne(this.mention);
      }
    },
    verb: function() {
      if (this.parent != null) {
        return 'replied to';
      }
      return 'commented';
    },
    nested: function() {
      if (this.parent) {
        return 'nested';
      } else {
        return '';
      }
    },
    addLineBreaks: function(text) {
      text = _.escape(text);
      return text.replace('\n', '<br>');
    },
    voted: function(state) {
      var vote;
      state = state === 'up' ? true : false;
      if (Meteor.user()) {
        vote = Votes.findOne({
          user: Meteor.user()._id,
          entity: this._id
        });
        if (vote && vote.up === state) {
          return 'active';
        }
      }
      return '';
    }
  });

}).call(this);
