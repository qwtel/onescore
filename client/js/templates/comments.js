// Generated by CoffeeScript 1.3.3
(function() {

  _.extend(Template.comments, {
    events: {
      'click .new': function(e) {
        Session.set('addComment', 'new');
        Meteor.flush();
        return window.focusById("add-" + this._id);
      },
      'keyup .new-thread,  keydown .new-thread': window.makeOkCancelHandler({
        ok: function(text, e) {
          var level, parent;
          parent = Session.get('parent');
          if (parent) {
            level = 1 + Session.get('level');
          } else {
            level = 0;
          }
          Comments.insert({
            type: Session.get('page'),
            text: text,
            date: new Date,
            topic: Session.get('topic'),
            parent: parent,
            user: Meteor.user()._id,
            score: 0,
            level: level
          });
          Session.set('addComment', null);
          Session.set('editComment', null);
          return e.target.value = "";
        }
      }),
      'keyup .comment-text, keydown .comment-text': window.makeOkCancelHandler({
        ok: function(text, e) {
          if (Session.get('addComment') !== null) {
            Comments.insert({
              type: Session.get('page'),
              text: text,
              date: new Date,
              topic: Session.get('topic'),
              parent: this._id,
              mention: this.user,
              user: Meteor.user()._id,
              score: 0,
              level: this.level + 1
            });
          }
          Session.set('addComment', null);
          Session.set('editComment', null);
          return e.target.value = "";
        }
      }),
      'keyup .edit-text, keydown .edit-text': window.makeOkCancelHandler({
        ok: function(text, e) {
          if (Session.equals('editComment', this._id)) {
            Comments.update(this._id, {
              $set: {
                text: text
              }
            });
          }
          Session.set('addComment', null);
          Session.set('editComment', null);
          return e.target.value = "";
        }
      })
    },
    select: function(id) {
      var sel;
      sel = {
        topic: Session.get('topic'),
        parent: Session.get('parent')
      };
      if (id) {
        sel.parent = id;
      }
      if (Session.equals('limit', 'me')) {
        sel.user = Meteor.user()._id;
      }
      if (Session.equals('limit', 'friends')) {
        sel.user = 'hugo';
      }
      return sel;
    },
    comments: function() {
      var c, data, sel, sort;
      sel = Template.comments.select();
      sort = Session.get('sort');
      switch (sort) {
        case 'hot':
          data = {
            score: -1
          };
          break;
        case 'cool':
          data = {
            score: 1
          };
          break;
        case 'new':
          data = {
            date: -1
          };
          break;
        case 'old':
          data = {
            date: 1
          };
          break;
        case 'best':
          data = {
            score: -1
          };
          break;
        case 'wort':
          data = {
            score: 1
          };
      }
      c = Comments.find(sel, {
        sort: data
      });
      return c;
    },
    user: function() {
      return Meteor.users.findOne(this.user);
    }
  });

}).call(this);
