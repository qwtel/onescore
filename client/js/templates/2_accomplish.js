// Generated by CoffeeScript 1.3.3

_.extend(Template.accomplish, {
  events: {
    'click .create': function(e) {
      var data;
      if (!e.isPropagationStopped()) {
        e.stopPropagation();
        data = Scratchpad.findOne({
          type: 'accomplishment',
          entity: this._id
        });
        console.log(formData);
        return Meteor.call('accomplish', data, formData, function(error, result) {
          return window.Router.navigate("/accomplishments/" + result, true);
        });
      }
    },
    'change .lazy': function(e) {
      var $t, data, field;
      data = {};
      $t = $(e.currentTarget);
      field = $t.attr('name');
      data[field] = $t.val();
      return Scratchpad.update(this._id, {
        $set: data
      });
    },
    'click .uncreate': function(e) {
      return Accomplishments.remove(this._id);
    },
    'click a.editor': function(e) {
      $('.editor').hide();
      return $('.preview').show();
    },
    'click a.preview': function(e) {
      $('.editor').show();
      return $('.preview').hide();
    },
    'change #upload': function(evt) {
      var f, files, reader, _i, _len, _results;
      files = evt.target.files;
      _results = [];
      for (_i = 0, _len = files.length; _i < _len; _i++) {
        f = files[_i];
        if (!f.type.match('image.*')) {
          continue;
        }
        formData.append(f.name, f);
        reader = new FileReader();
        reader.onload = (function(theFile) {
          return function(e) {
            var $img, $img2;
            $img = $('<img/>').attr('src', e.target.result).attr('title', _.escape(theFile.name));
            $img2 = $img.clone();
            $('#thumbnails').html($('<li></li>').addClass('span3').append($('<div></div>').addClass('thumbnail').append($img)));
            return $('#list').html($img2);
          };
        })(f);
        _results.push(reader.readAsDataURL(f));
      }
      return _results;
    }
  },
  newAccomplishment: function() {
    return Scratchpad.findOne({
      type: 'accomplishment',
      entity: Session.get('single')
    });
  },
  accomplishment: function() {
    return Accomplishments.findOne({
      user: Meteor.user()._id,
      entity: this._id
    });
  },
  rendered: function() {
    return $('#editor').markdownEditor({
      toolbarLoc: $("#toolbar"),
      toolbar: "default",
      preview: $("#preview")
    });
  }
});
