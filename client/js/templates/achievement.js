// Generated by CoffeeScript 1.3.3
(function() {

  _.extend(Template.achievement, {
    events: {
      'click .vote': function(e) {
        var $t, up;
        if (!e.isPropagationStopped()) {
          $t = $(e.target);
          if (!$t.hasClass('vote')) {
            $t = $t.parents('.vote');
          }
          up = $t.data('up');
          Meteor.call('vote', 'achievements', this._id, up);
          return e.stopPropagation();
        }
      },
      'click .expand': function(e) {
        if (!e.isPropagationStopped()) {
          Session.toggle('expand', this._id);
          return e.stopPropagation();
        }
      },
      'click .fav': function(e) {
        var fav;
        fav = Favourites.findOne({
          user: Meteor.user()._id,
          entity: this._id
        });
        if (fav) {
          return Favourites.update(fav._id, {
            $set: {
              active: !fav.active
            }
          });
        } else {
          return Favourites.insert({
            user: Meteor.user()._id,
            entity: this._id,
            active: true
          });
        }
      }
    },
    faved: function() {
      var fav;
      if (Meteor.user()) {
        fav = Favourites.findOne({
          user: Meteor.user()._id,
          entity: this._id,
          active: true
        });
        if (fav) {
          return 'active';
        }
      }
      return '';
    },
    voted: function(state) {
      var vote;
      state = state === 'up' ? true : false;
      if (Meteor.user()) {
        vote = Votes.findOne({
          user: Meteor.user()._id,
          entity: this._id
        });
        if (vote && vote.up === state) {
          return 'active';
        }
      }
      return '';
    },
    accepted: function(id) {
      var fav;
      fav = Favourites.findOne({
        user: Meteor.user()._id,
        entity: id,
        active: true
      });
      if (fav) {
        return true;
      }
    },
    completed: function(id) {
      var acc;
      acc = Accomplishments.findOne({
        user: Meteor.user()._id,
        entity: id
      });
      if (acc) {
        return true;
      }
    },
    color: function() {
      if (this) {
        if (Session.equals('newAchievement', this._id)) {
          return '';
        }
      }
      if (Meteor.user()) {
        if (Template.achievement.completed(this._id)) {
          return 'completed';
        }
        if (Template.achievement.accepted(this._id)) {
          return 'accepted';
        } else if (Achievements.find().count() > 0) {
          return 'uncompleted';
        }
        return '';
      }
    },
    hasScore: function() {
      if (this) {
        if (this.score != null) {
          return true;
        } else {
          return false;
        }
      }
    }
  });

}).call(this);
