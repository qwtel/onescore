// Generated by CoffeeScript 1.3.3
(function() {

  _.extend(Template.tags, {
    events: {
      'click .add': function(e) {
        Session.set('addingTag', this._id);
        Meteor.flush();
        return focusById('addingTag-' + this._id);
      },
      'keyup .edittag-input,  keydown .edittag-input': makeOkCancelHandler({
        ok: function(text, e) {
          if (!this.tags) {
            this.tags = [];
          }
          text = text.replace(/\s/g, '');
          this.tags = _.union(this.tags, [text]);
          window.Collections[this.type].update(this._id, {
            $set: {
              tags: this.tags
            }
          });
          return Session.set('addingTag', null);
        },
        cancel: Session.set('addingTag', null)
      }),
      'click .remove': function(e) {
        e.stopPropagation();
        return window.Collections[this.entityType].update(this.entity, {
          $pull: {
            tags: this.tag
          }
        });
      }
    },
    tagObjects: function() {
      var tagObjects,
        _this = this;
      tagObjects = [];
      _.each(this.tags, function(tag) {
        return tagObjects.push({
          tag: tag,
          entity: _this._id,
          entityType: _this.type
        });
      });
      return tagObjects;
    },
    isActive: function(name, value) {
      var field;
      Session.get('_' + name);
      field = Session.get(name);
      if (_.contains(field, value)) {
        return 'active';
      } else {
        return '';
      }
    },
    addingTag: function() {
      Session.get('redraw');
      return Session.equals('addingTag', this._id);
    }
  });

}).call(this);
