// Generated by CoffeeScript 1.3.3

_.extend(Template.achievement, {
  events: {
    'click .expand': function(e) {
      if (!e.isPropagationStopped()) {
        Session.toggle('expand', this._id);
        return e.stopPropagation();
      }
    },
    'click .fav': function(e) {
      var fav;
      fav = Favourites.findOne({
        user: Meteor.user()._id,
        entity: this._id
      });
      if (fav) {
        return Favourites.update(fav._id, {
          $set: {
            active: !fav.active
          }
        });
      } else {
        return Favourites.insert({
          user: Meteor.user()._id,
          type: 'favourite',
          entity: this._id,
          active: true
        });
      }
    }
  },
  faved: function() {
    var fav;
    if (Meteor.user()) {
      fav = Favourites.findOne({
        user: Meteor.user()._id,
        entity: this._id,
        active: true
      });
      if (fav) {
        return 'active';
      }
    }
    return '';
  },
  accepted: function(id) {
    var fav;
    fav = Favourites.findOne({
      user: Meteor.user()._id,
      entity: id,
      active: true
    });
    if (fav) {
      return true;
    }
  },
  completed: function(id) {
    var acc;
    acc = Accomplishments.findOne({
      user: Meteor.user()._id,
      entity: id
    });
    if (acc) {
      return true;
    }
  },
  color: function() {
    if (this) {
      if (Session.equals('newAchievement', this._id)) {
        return '';
      }
    }
    if (Meteor.user()) {
      if (Template.achievement.completed(this._id)) {
        return 'completed';
      }
      if (Template.achievement.accepted(this._id)) {
        return 'accepted';
      } else if (Achievements.find().count() > 0) {
        return 'uncompleted';
      }
      return '';
    }
  },
  hasScore: function() {
    if (this && (this.score != null)) {
      return true;
    }
    return false;
  }
});
