// Generated by CoffeeScript 1.3.3

_.extend(Template.newAchievement, Template.edit, {
  newAchievement: function() {
    var data, id, newAchievement;
    newAchievement = Scratchpad.findOne({
      type: 'achievement'
    });
    if (newAchievement) {
      id = newAchievement._id;
    } else {
      data = {
        user: Meteor.user()._id,
        date: new Date().getTime(),
        score: 0,
        hot: 0,
        best: 0,
        value: 0,
        comments: 0
      };
      data.type = 'achievement';
      data.collection = 'scratchpad';
      id = Scratchpad.insert(data);
    }
    return Scratchpad.findOne(id);
  }
});

Template.newAchievement.events = _.extend({}, Template.edit.events, {
  'click .close': function(e) {
    return Session.set('styleGuide', true);
  },
  'change .lazy': function(e) {
    var $t, data, field;
    data = {};
    $t = $(e.currentTarget);
    field = $t.data('field');
    data[field] = $t.val();
    return Scratchpad.update(this._id, {
      $set: data
    });
  },
  'change .description': function(e) {
    var $t, desc, tags;
    $t = $(e.currentTarget);
    desc = $t.val();
    tags = window.findTags(desc) || [];
    if (this.tags) {
      tags = _.union(tags, this.tags);
    }
    return Scratchpad.update(this._id, {
      $set: {
        tags: tags
      }
    });
  },
  'click .create': function(e) {
    var data, defaults, id, titleData;
    defaults = {
      category: 'random'
    };
    data = Scratchpad.findOne(this._id);
    data = _.defaults(data, defaults);
    delete data._id;
    id = Achievements.insert(data);
    if (this.title) {
      titleData = {
        title: this.title,
        entity: id
      };
      Meteor.call('suggestTitle', titleData);
    }
    return window.Router.navigate("achievements/" + id, true);
  }
});
