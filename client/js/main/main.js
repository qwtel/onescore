// Generated by CoffeeScript 1.3.3
(function() {
  var AppRouter,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  AppRouter = (function(_super) {

    __extends(AppRouter, _super);

    function AppRouter() {
      return AppRouter.__super__.constructor.apply(this, arguments);
    }

    AppRouter.prototype.routes = {
      '': 'default',
      ':menu': 'menu',
      'achievements/:id': 'achievements',
      'achievements/:id/:tab': 'achievements',
      'accomplishments/:id': 'accomplishments',
      'accomplishments/:id/:tab': 'accomplishments'
    };

    AppRouter.prototype["default"] = function() {
      return this.navigate('dashboard', true);
    };

    AppRouter.prototype.menu = function(page) {
      this.hardReset();
      switch (page) {
        case 'dashboard':
          Session.set('sort', 'hot');
          break;
        case 'achievements':
          Session.set('sort', 'best');
          break;
        case 'ladder':
          Session.set('sort', 'best');
          break;
        case 'profile':
          Session.set('sort', 'new');
      }
      return Session.set('page', page);
    };

    AppRouter.prototype.achievements = function(id, tab) {
      this.softReset();
      Session.set('page', 'achievements');
      Session.set('single', id);
      if (!tab) {
        tab = 'info';
      }
      return Session.set('tab', tab);
    };

    AppRouter.prototype.accomplishments = function(id, tab) {
      this.softReset();
      Session.set('page', 'accomplishments');
      Session.set('single', id);
      if (!tab) {
        tab = 'info';
      }
      return Session.set('tab', tab);
    };

    AppRouter.prototype.softReset = function() {
      return Session.set('expand', null);
    };

    AppRouter.prototype.hardReset = function() {
      this.softReset();
      $(document).scrollTop(0);
      Session.set('single', null);
      return Session.set('tab', null);
    };

    return AppRouter;

  })(Backbone.Router);

  window.Router = new AppRouter;

  Meteor.startup(function() {
    return Backbone.history.start({
      pushState: true
    });
  });

}).call(this);
